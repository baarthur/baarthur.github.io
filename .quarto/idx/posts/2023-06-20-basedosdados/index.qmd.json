{"title":"Acessando a Base dos Dados no R","markdown":{"yaml":{"title":"Acessando a Base dos Dados no R","description":"É mais fácil do que parece!","author":[{"name":"Arthur Bazolli Alvarenga","url":"https://baarthur.github.io/","affiliation":"PPGE/UFJF","affiliation-url":"https://www2.ufjf.br/poseconomia/"}],"date":"2023-06-20","categories":["R","Basedosdados","Tutorial"],"citation":{"url":"https://baarthur.github.io/posts/2023-06-20-basedosdados/"},"image":"img/bd_logo.png","draft":false,"execute":{"echo":"fenced","eval":false},"format":{"html":{"include-in-header":{"text":"<style>\nh1 {\ncolor: #fff;\n}\n</style>\n"}}}},"headingText":"Introdução","containsRefs":false,"markdown":"\n\n\nA [Base dos Dados](https://basedosdados.org/) é uma platadorma excelente para obter dados oficiais e tratados de forma conveniente. Podemos baixá-la direto no R com facilidade, basta prestarmos atenção a algumas etapas.\n\nEsta é uma rotina simplificada. Veja mais no Workshop: [Aprenda a acessar dados públicos em R](https://www.youtube.com/watch?v=M9ayiseIjvI&t=2781s&ab_channel=BasedosDados), da Base dos Dados.\n\n## Primeiros passos\n\nSempre que for trabalhar em um novo projeto, aproveite as funcionalidades do R Studio. Vá em `File` > `New Project...` > `New Directory` ou `Existing Directory`.\nSegundo passo: criar um arquivo para a rotina (`File` > `New File...` > `...`). Pode ser um R Script, um R Markdown ou um Quarto Markdown (recomendo este último).\n\n::: {.callout-tip}\nUse pastas diferentes dentro da sua pasta do projeto para organizar seus arquivos. Eu uso três pastas; `data`, `src` e `output`: a primeira para as bases de dados, a segunda para os códigos e a terceira para PDFs, gráficos e outras produções.\n:::\n\nCrie um bloco de código (`Ctrl` + `Alt` + `I`) para chamar os pacotes necessários. Use a opção `#| label: setup`, como abaixo, para ele sempre ser executado no começo.\n```{r}\n#| label: setup\n\n# geral e tratamento de dados\nlibrary(here)\nlibrary(tidyverse)\n\n# bases de dados\nlibrary(basedosdados)\n```\n\n\n### Google Cloud\n\nPara baixar os dados no R, vamos precisar criar um projeto no Google Cloud. Os projetos do Google Cloud são muito usados em diversas situações (ex.: APIs do Google Maps) e a Google nos dá um limite gratuito (1 TB por dia ou 200 dólares por mês): mas não se preocupe, você não vai estourar essa cota.\n\n1. Vá até [cloud.google.com/](https://cloud.google.com/)\n2. Clique em `Console` (canto superior direito) \n3. Na caixa de diálogo (vide abaixo), concorde e continue\n\n![](img/bd_1.png){height=\"400\"}\n\n4. Em seguida, clique em `Selecione um projeto` > `NOVO PROJETO`\n5. Dê um nome ao projeto. Esse nome não pode ser alterado depois.\n\n![](img/bd_2.png){height=\"400\"}\n\n6. Após criar o seu projeto, você será direcionado à página do projeto. Agora, é só configurar as funções do pacote `{basedosdados}` no R para acessar o seu projeto.\n\n### Base dos dados\n\nVamos chamar a função `set_billing_id()`. Dentro dela, você vai inserir o ID do seu projeto (entre aspas, porque é um `character`), disponível aqui:\n\n![](img/bd_3.png){height=\"400\"}\n\n::: {.callout-warning}\nO seu ID do projeto é pessoal. Não compartilhe com ninguém, ou disponibilize na internet, ou você corre o risco de ganhar uma fatura nada amigável no seu cartão de crédito.\n:::\n\n```{r}\n#| label: config-bd\n\nset_billing_id(\"id-projeto\")\n```\n\nVocê deve ver a mensagem \"Project keys set successfully\".\n\n\n## Chamada SQL\n\nA melhor forma de baixar dados da BD pelo R é fazendo uma chamada SQL (lê-se \"síquel\" ou *sequel*). [SQL](https://pt.wikipedia.org/wiki/SQL) é uma linguagem de pesquisa, muito usada para acessar base dos dados. Mas não se preocupe, não precisamos dominar SQL! Basta aprender a estrutura básica.\n\n### Query: sintaxe básica\n\nNa página da base que você pretende baixar (ex.: [PNAD Contínua](https://basedosdados.org/dataset/9fa532fb-5681-4903-b99d-01dc45fd527a?table=a04fc85d-908a-4393-b51d-1bd517a40210)), copie o código que está na aba SQL: ele é a sua *query*, que você vai usar para requisitar uma informação. Você vai criar um objeto no `R` para guardá-la.\n\nObserve que a `query` tem a seguinte estrutura\n> `SELECT` \\* `FROM` \\`basedosdados.br_ibge_pnadc.microdados\\` `LIMIT 100`\n\nVamos entendê-la:\n\n* `SELECT` indica as variáveis que vamos selecionar. Como essa informação é seguida de um asterisco, indica que vamos selecionar todas as variáveis da base. Para selecionar variáveis: \n  + Selecione uma das tabelas tratadas no menu lateral esquerdo.\n  + Desça até colunas: ali você encontra o nome das variáveis, seu formato e uma descrição.\n  + Separe os nomes das variáveis por vírgulas após `SELECT` (apague o asterisco)\n* `FROM` \\`basedosdados.br_ibge_pnadc.microdados\\`: o endereço de onde os dados virão.\n* `LIMIT 100` significa que estamos limitando a baixar apenas as 100 primeiras linhas.\n\nAo baixar microdados do Censo, da Rais ou da Pnad, estamos lidando com um volume gigante de informações. Por isso, é recomendável usar a opção `LIMIT 100`, `LIMIT 1000` etc para baixar só um pedaço e testar se você vai querer mesmo essa base (por exemplo, investigar se as variáveis te atendem).\n\nQuando você já tiver certeza de que vai usar essa base, tire o `LIMIT XXX`, mas atenção: é **extremamente** recomendável que você selecione uma lista de variáveis em vez de baixar todas. Isso vai poupar não apenas sua internet e o espaço no seu disco, mas também a eficiência do R quando for ler e trabalhar nos seus dados.\n\nExemplo: vamos pegar algumas informações da PNAD de domicílios.\n```{r}\n#| label: query-1\n\nquery_pnad <- \"SELECT ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032 FROM basedosdados.br_ibge_pnadc.microdados LIMIT 100\"\n```\n\nPodemos melhorar a query ainda mais aprendendo mais três argumentos: `WHERE`, `AND`, `OR` e `in`. Eles nos ajudam a filtrar a base para, por exemplo, baixar dados só de um estado, de anos específicos ou uma combinação disso tudo. Isso facilita **muito** a nossa vida, porque assim evitamos baixar um monte de dados desnecessários. \n\nExemplo: atualizar a query anterior para pegar apenas dados de 2017 a 2021 de Minas Gerais. Para isso, vamos usar um pouco de lógica para montar a sintaxe:\n\n* `WHERE` indica os filtros a serem aplicados. No caso, `sigla_uf='MG'` é o filtro do estado.\n* O filtro do ano é mais complicado. Temos duas alternativas:\n  + `ano = 2017 OR ano = 2019 OR ano = 2021`. Muito repetitivo!\n  + Melhor: `ano in (2017,2019,2021)`.\n* Agora, como queremos dados de MG **E** nessa janela temporal, concatenamos os dois com `AND`:\n  + `SELECT (...) WHERE sigla_uf='MG' AND (ano in (2017,2019,2021))`\n  + Colocamos a cláusula do ano dentro de parênteses para garantir que tudo aquilo será avaliado. Isso é importante, por exemplo, quando estivermos trabalhando com cláusulas `OR` em conjunto, senão vira bagunça.\n  \n::: {.callout-warning}\nA sua `query` é um vetor entre aspas no `R`. Assim, se você estiver filtrando uma variável que é character, você pode acabar estragando sua `query` se não tomar cuidado. Por isso, use aspas duplas (`\"`) para a `query` e aspas simples (`'`) para os `character`s dentro da `query`, como fizemos com `sigla_uf='MG'`.\n:::\n\n```{r}\n#| label: query-2\n\nquery_pnad <- \"SELECT ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032 FROM basedosdados.br_ibge_pnadc.microdados WHERE sigla_uf='MG' AND ano in (2017,2019,2021) LIMIT 100\"\n```\n\nJá está bom, mas essa query está difícil de ler. Podemos separar cada bloco dela em objetos diferentes. depois concatenar tudo em um objeto só usando `paste()`:\n```{r}\n#| label: query-3\n\nvariables <- \"ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032\"\nsource <- \"`basedosdados.br_ibge_pnadc.microdados`\"\nclause_where <- \"sigla_uf='MG'\"\nclause_and_ano <- \"(ano in (2017,2019,2021))\"\n\n### query: PNAD MG 2017-2021\nquery_pnad_1721 <- paste(\n  \"SELECT\", variables,\n  \"FROM\", source, \n  \"WHERE\", clause_where,\n  \"AND\", clause_and_ano,\n  \"LIMIT 100\"\n)\n```\n\nEssa estrutura é útil porque permite facilmente modificar trechos evitando erros e reproduzir em outros trabalhos mantendo uma sintaxe padronizada e eficiente. Outra dica: você pode modificar a query comentando linhas do seu vetor, como no exemplo abaixo (tirar o LIMIT e baixar tudo). \n```{r}\n#| label: query-4\n\n### query: PNAD MG 2017-2021\nquery_pnad_1721 <- paste(\n  \"SELECT\", variables,\n  \"FROM\", source, \n  \"WHERE\", clause_where,\n  \"AND\", clause_and_ano,\n  \"LIMIT 100\"\n)\n```\n\n\n### Baixar a query\n\nAgora, podemos baixar a query. Podemos fazer isso de duas formas: salvando em um objeto do R ou salvando em um .csv no computador. Eu prefiro a segunda opção, porque permite carregar os dados depois sem ter que baixar tudo de novo. Na hora de baixar os dados, vai aparecer uma opção no console do `R` pedindo para autenticar o usuário no seu navegador (ou digite `2`, se o seu email já aparecer) e prossiga.\n\n::: {.callout-warning}\nVocê deve selecionar todas as caixas, como na imagem abaixo.\n:::\n\n![](img/bd_4.png){height=\"400\"}\n\n**Opção 1: direto no R**\n\nNesse caso, usamos a função `read_sql()`\n```{r}\n#| label: download-query-R\n\ndf_pnad <- read_sql(query_pnad_1721)\n```\n\n**Opção 2: salvar no disco**\n\nPara isso, usamos a função `download()` e incluímos na chamada o argumento `path` com o caminho para salvar. Como estamos usando um `R Project`, passamos o diretório relativo à pasta do projeto. Ou seja: não precisa de inverter barras e pegar o caminho completo da pasta. No caso de usar RMarkdown ou Quarto (meu caso) em vez de um R Script, usamos a função `here()` também.\n\nNo exemplo abaixo, vamos salvar a base dos dados na pasta `data` dentro da pasta do projeto (não se esqueça de criar a pasta).\n```{r}\n#| label: download-query\n\ndownload(query_pnad_1721, path = here(\"data/df_pnad_mg_1721.csv\"))\n```\n\nPronto! Agora já podemos carregar, tratar e analisar os dados:\n```{r}\n#| label: load-bd\n\ndf_pnad <- read_csv(here(\"data/df_pnad_mg_1721.csv\"))\n```\n","srcMarkdownNoYaml":"\n\n## Introdução\n\nA [Base dos Dados](https://basedosdados.org/) é uma platadorma excelente para obter dados oficiais e tratados de forma conveniente. Podemos baixá-la direto no R com facilidade, basta prestarmos atenção a algumas etapas.\n\nEsta é uma rotina simplificada. Veja mais no Workshop: [Aprenda a acessar dados públicos em R](https://www.youtube.com/watch?v=M9ayiseIjvI&t=2781s&ab_channel=BasedosDados), da Base dos Dados.\n\n## Primeiros passos\n\nSempre que for trabalhar em um novo projeto, aproveite as funcionalidades do R Studio. Vá em `File` > `New Project...` > `New Directory` ou `Existing Directory`.\nSegundo passo: criar um arquivo para a rotina (`File` > `New File...` > `...`). Pode ser um R Script, um R Markdown ou um Quarto Markdown (recomendo este último).\n\n::: {.callout-tip}\nUse pastas diferentes dentro da sua pasta do projeto para organizar seus arquivos. Eu uso três pastas; `data`, `src` e `output`: a primeira para as bases de dados, a segunda para os códigos e a terceira para PDFs, gráficos e outras produções.\n:::\n\nCrie um bloco de código (`Ctrl` + `Alt` + `I`) para chamar os pacotes necessários. Use a opção `#| label: setup`, como abaixo, para ele sempre ser executado no começo.\n```{r}\n#| label: setup\n\n# geral e tratamento de dados\nlibrary(here)\nlibrary(tidyverse)\n\n# bases de dados\nlibrary(basedosdados)\n```\n\n\n### Google Cloud\n\nPara baixar os dados no R, vamos precisar criar um projeto no Google Cloud. Os projetos do Google Cloud são muito usados em diversas situações (ex.: APIs do Google Maps) e a Google nos dá um limite gratuito (1 TB por dia ou 200 dólares por mês): mas não se preocupe, você não vai estourar essa cota.\n\n1. Vá até [cloud.google.com/](https://cloud.google.com/)\n2. Clique em `Console` (canto superior direito) \n3. Na caixa de diálogo (vide abaixo), concorde e continue\n\n![](img/bd_1.png){height=\"400\"}\n\n4. Em seguida, clique em `Selecione um projeto` > `NOVO PROJETO`\n5. Dê um nome ao projeto. Esse nome não pode ser alterado depois.\n\n![](img/bd_2.png){height=\"400\"}\n\n6. Após criar o seu projeto, você será direcionado à página do projeto. Agora, é só configurar as funções do pacote `{basedosdados}` no R para acessar o seu projeto.\n\n### Base dos dados\n\nVamos chamar a função `set_billing_id()`. Dentro dela, você vai inserir o ID do seu projeto (entre aspas, porque é um `character`), disponível aqui:\n\n![](img/bd_3.png){height=\"400\"}\n\n::: {.callout-warning}\nO seu ID do projeto é pessoal. Não compartilhe com ninguém, ou disponibilize na internet, ou você corre o risco de ganhar uma fatura nada amigável no seu cartão de crédito.\n:::\n\n```{r}\n#| label: config-bd\n\nset_billing_id(\"id-projeto\")\n```\n\nVocê deve ver a mensagem \"Project keys set successfully\".\n\n\n## Chamada SQL\n\nA melhor forma de baixar dados da BD pelo R é fazendo uma chamada SQL (lê-se \"síquel\" ou *sequel*). [SQL](https://pt.wikipedia.org/wiki/SQL) é uma linguagem de pesquisa, muito usada para acessar base dos dados. Mas não se preocupe, não precisamos dominar SQL! Basta aprender a estrutura básica.\n\n### Query: sintaxe básica\n\nNa página da base que você pretende baixar (ex.: [PNAD Contínua](https://basedosdados.org/dataset/9fa532fb-5681-4903-b99d-01dc45fd527a?table=a04fc85d-908a-4393-b51d-1bd517a40210)), copie o código que está na aba SQL: ele é a sua *query*, que você vai usar para requisitar uma informação. Você vai criar um objeto no `R` para guardá-la.\n\nObserve que a `query` tem a seguinte estrutura\n> `SELECT` \\* `FROM` \\`basedosdados.br_ibge_pnadc.microdados\\` `LIMIT 100`\n\nVamos entendê-la:\n\n* `SELECT` indica as variáveis que vamos selecionar. Como essa informação é seguida de um asterisco, indica que vamos selecionar todas as variáveis da base. Para selecionar variáveis: \n  + Selecione uma das tabelas tratadas no menu lateral esquerdo.\n  + Desça até colunas: ali você encontra o nome das variáveis, seu formato e uma descrição.\n  + Separe os nomes das variáveis por vírgulas após `SELECT` (apague o asterisco)\n* `FROM` \\`basedosdados.br_ibge_pnadc.microdados\\`: o endereço de onde os dados virão.\n* `LIMIT 100` significa que estamos limitando a baixar apenas as 100 primeiras linhas.\n\nAo baixar microdados do Censo, da Rais ou da Pnad, estamos lidando com um volume gigante de informações. Por isso, é recomendável usar a opção `LIMIT 100`, `LIMIT 1000` etc para baixar só um pedaço e testar se você vai querer mesmo essa base (por exemplo, investigar se as variáveis te atendem).\n\nQuando você já tiver certeza de que vai usar essa base, tire o `LIMIT XXX`, mas atenção: é **extremamente** recomendável que você selecione uma lista de variáveis em vez de baixar todas. Isso vai poupar não apenas sua internet e o espaço no seu disco, mas também a eficiência do R quando for ler e trabalhar nos seus dados.\n\nExemplo: vamos pegar algumas informações da PNAD de domicílios.\n```{r}\n#| label: query-1\n\nquery_pnad <- \"SELECT ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032 FROM basedosdados.br_ibge_pnadc.microdados LIMIT 100\"\n```\n\nPodemos melhorar a query ainda mais aprendendo mais três argumentos: `WHERE`, `AND`, `OR` e `in`. Eles nos ajudam a filtrar a base para, por exemplo, baixar dados só de um estado, de anos específicos ou uma combinação disso tudo. Isso facilita **muito** a nossa vida, porque assim evitamos baixar um monte de dados desnecessários. \n\nExemplo: atualizar a query anterior para pegar apenas dados de 2017 a 2021 de Minas Gerais. Para isso, vamos usar um pouco de lógica para montar a sintaxe:\n\n* `WHERE` indica os filtros a serem aplicados. No caso, `sigla_uf='MG'` é o filtro do estado.\n* O filtro do ano é mais complicado. Temos duas alternativas:\n  + `ano = 2017 OR ano = 2019 OR ano = 2021`. Muito repetitivo!\n  + Melhor: `ano in (2017,2019,2021)`.\n* Agora, como queremos dados de MG **E** nessa janela temporal, concatenamos os dois com `AND`:\n  + `SELECT (...) WHERE sigla_uf='MG' AND (ano in (2017,2019,2021))`\n  + Colocamos a cláusula do ano dentro de parênteses para garantir que tudo aquilo será avaliado. Isso é importante, por exemplo, quando estivermos trabalhando com cláusulas `OR` em conjunto, senão vira bagunça.\n  \n::: {.callout-warning}\nA sua `query` é um vetor entre aspas no `R`. Assim, se você estiver filtrando uma variável que é character, você pode acabar estragando sua `query` se não tomar cuidado. Por isso, use aspas duplas (`\"`) para a `query` e aspas simples (`'`) para os `character`s dentro da `query`, como fizemos com `sigla_uf='MG'`.\n:::\n\n```{r}\n#| label: query-2\n\nquery_pnad <- \"SELECT ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032 FROM basedosdados.br_ibge_pnadc.microdados WHERE sigla_uf='MG' AND ano in (2017,2019,2021) LIMIT 100\"\n```\n\nJá está bom, mas essa query está difícil de ler. Podemos separar cada bloco dela em objetos diferentes. depois concatenar tudo em um objeto só usando `paste()`:\n```{r}\n#| label: query-3\n\nvariables <- \"ano, id_domicilio, id_uf, id_upa, V1028, V2007, V2010, V3001, V4009, V4012, VD3005 VD4032\"\nsource <- \"`basedosdados.br_ibge_pnadc.microdados`\"\nclause_where <- \"sigla_uf='MG'\"\nclause_and_ano <- \"(ano in (2017,2019,2021))\"\n\n### query: PNAD MG 2017-2021\nquery_pnad_1721 <- paste(\n  \"SELECT\", variables,\n  \"FROM\", source, \n  \"WHERE\", clause_where,\n  \"AND\", clause_and_ano,\n  \"LIMIT 100\"\n)\n```\n\nEssa estrutura é útil porque permite facilmente modificar trechos evitando erros e reproduzir em outros trabalhos mantendo uma sintaxe padronizada e eficiente. Outra dica: você pode modificar a query comentando linhas do seu vetor, como no exemplo abaixo (tirar o LIMIT e baixar tudo). \n```{r}\n#| label: query-4\n\n### query: PNAD MG 2017-2021\nquery_pnad_1721 <- paste(\n  \"SELECT\", variables,\n  \"FROM\", source, \n  \"WHERE\", clause_where,\n  \"AND\", clause_and_ano,\n  \"LIMIT 100\"\n)\n```\n\n\n### Baixar a query\n\nAgora, podemos baixar a query. Podemos fazer isso de duas formas: salvando em um objeto do R ou salvando em um .csv no computador. Eu prefiro a segunda opção, porque permite carregar os dados depois sem ter que baixar tudo de novo. Na hora de baixar os dados, vai aparecer uma opção no console do `R` pedindo para autenticar o usuário no seu navegador (ou digite `2`, se o seu email já aparecer) e prossiga.\n\n::: {.callout-warning}\nVocê deve selecionar todas as caixas, como na imagem abaixo.\n:::\n\n![](img/bd_4.png){height=\"400\"}\n\n**Opção 1: direto no R**\n\nNesse caso, usamos a função `read_sql()`\n```{r}\n#| label: download-query-R\n\ndf_pnad <- read_sql(query_pnad_1721)\n```\n\n**Opção 2: salvar no disco**\n\nPara isso, usamos a função `download()` e incluímos na chamada o argumento `path` com o caminho para salvar. Como estamos usando um `R Project`, passamos o diretório relativo à pasta do projeto. Ou seja: não precisa de inverter barras e pegar o caminho completo da pasta. No caso de usar RMarkdown ou Quarto (meu caso) em vez de um R Script, usamos a função `here()` também.\n\nNo exemplo abaixo, vamos salvar a base dos dados na pasta `data` dentro da pasta do projeto (não se esqueça de criar a pasta).\n```{r}\n#| label: download-query\n\ndownload(query_pnad_1721, path = here(\"data/df_pnad_mg_1721.csv\"))\n```\n\nPronto! Agora já podemos carregar, tratar e analisar os dados:\n```{r}\n#| label: load-bd\n\ndf_pnad <- read_csv(here(\"data/df_pnad_mg_1721.csv\"))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":false,"cache":null,"freeze":true,"echo":"fenced","output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"include-in-header":{"text":"<style>\nh1 {\ncolor: #fff;\n}\n</style>\n"},"output-file":"index.html"},"language":{"toc-title-document":"Índice","toc-title-website":"Nesta página","related-formats-title":"Outros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fonte","other-links-title":"Outros Links","code-links-title":"Links de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Caderno de Artigo","notebook-preview-download":"Baixar Caderno","notebook-preview-download-src":"Baixar código-fonte","notebook-preview-back":"Voltar ao Artigo","manuscript-meca-bundle":"Arquivo MECA","section-title-abstract":"Resumo","section-title-appendices":"Apêndices","section-title-footnotes":"Notas de rodapé","section-title-references":"Referências","section-title-reuse":"Reuso","section-title-copyright":"Direito autoral","section-title-citation":"Citação","appendix-attribution-cite-as":"Por favor, cite este trabalho como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Visualizar Licença","title-block-author-single":"Autor","title-block-author-plural":"Autores","title-block-affiliation-single":"Afiliação","title-block-affiliation-plural":"Afiliações","title-block-published":"Data de Publicação","title-block-modified":"Data de Modificação","title-block-keywords":"Palavras-chave","callout-tip-title":"Dica","callout-note-title":"Nota","callout-warning-title":"Aviso","callout-important-title":"Importante","callout-caution-title":"Cuidado","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar o código","code-tools-hide-all-code":"Esconder o código","code-tools-view-source":"Ver o código fonte","code-tools-source-code":"Código fonte","tools-share":"Compartilhar","tools-download":"Baixar","code-line":"Linha","code-lines":"Linhas","copy-button-tooltip":"Copiar para a área de transferência","copy-button-tooltip-success":"Copiada","repo-action-links-edit":"Editar essa página","repo-action-links-source":"Ver o código fonte","repo-action-links-issue":"Criar uma issue","back-to-top":"De volta ao topo","search-no-results-text":"Nenhum resultado","search-matching-documents-text":"documentos correspondentes","search-copy-link-title":"Copiar link para a busca","search-hide-matches-text":"Esconder correspondências adicionais","search-more-match-text":"mais correspondência neste documento","search-more-matches-text":"mais correspondências neste documento","search-clear-button-title":"Limpar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Procurar","toggle-section":"Alternar seção","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo escuro","toggle-reader-mode":"Alternar modo de leitor","toggle-navigation":"Alternar de navegação","crossref-fig-title":"Figura","crossref-tbl-title":"Tabela","crossref-lst-title":"Listagem","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolário","crossref-prp-title":"Proposição","crossref-cnj-title":"Conjectura","crossref-def-title":"Definição","crossref-exm-title":"Exemplo","crossref-exr-title":"Exercício","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apêndice","crossref-sec-prefix":"Seção","crossref-eq-prefix":"Equação","crossref-lof-title":"Lista de Figuras","crossref-lot-title":"Lista de Tabelas","crossref-lol-title":"Lista de Listagens","environment-proof-title":"Comprovação","environment-remark-title":"Comentário","environment-solution-title":"Solução","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Padrão","listing-page-order-by-date-asc":"Mais antigo","listing-page-order-by-date-desc":"O mais novo","listing-page-order-by-number-desc":"Decrescente","listing-page-order-by-number-asc":"Baixo para alto","listing-page-field-date":"Data","listing-page-field-title":"Título","listing-page-field-description":"Descrição","listing-page-field-author":"Autor","listing-page-field-filename":"Nome do arquivo","listing-page-field-filemodified":"Modificada","listing-page-field-subtitle":"Legenda","listing-page-field-readingtime":"Tempo de leitura","listing-page-field-wordcount":"Contagem de palavras","listing-page-field-categories":"Categorias","listing-page-minutes-compact":"{0}Min","listing-page-category-all":"Todos","listing-page-no-matches":"Sem itens correspondentes","listing-page-words":"{0} palavras","listing-page-filter":"Filtro","draft":"Rascunho"},"metadata":{"lang":"pt-BR","fig-responsive":true,"quarto-version":"1.6.42","comments":{"giscus":{"repo":"baarthur/baarthur.github.io"}},"theme":{"light":["flatly","../../styles.scss"],"dark":["darkly","../../styles.scss"]},"mainfont":"Atkinson Hyperlegible","title-block-banner":true,"title":"Acessando a Base dos Dados no R","description":"É mais fácil do que parece!","author":[{"name":"Arthur Bazolli Alvarenga","url":"https://baarthur.github.io/","affiliation":"PPGE/UFJF","affiliation-url":"https://www2.ufjf.br/poseconomia/"}],"date":"2023-06-20","categories":["R","Basedosdados","Tutorial"],"citation":{"url":"https://baarthur.github.io/posts/2023-06-20-basedosdados/"},"image":"img/bd_logo.png","draft":false},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}